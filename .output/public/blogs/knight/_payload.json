[{"data":1,"prerenderedAt":98},["ShallowReactive",2],{"blog-post-/blogs/knight":3},{"_path":4,"_dir":5,"_draft":6,"_partial":6,"_locale":7,"title":8,"description":9,"date":10,"image":11,"alt":12,"ogImage":11,"tags":13,"published":17,"body":18,"_type":91,"_id":92,"_source":93,"_file":94,"_stem":95,"_extension":96,"sitemap":97},"/blogs/knight","blogs",false,"","Wasm Mini Game Knight â™ž","Side-scrolling action mini game in Rust & Wasm","20th Oct 2024","/blogs-img/20241027.png","wasm_game_of_Knight_screen",[14,15,16],"rust","wasm","webassembly",true,{"type":19,"children":20,"toc":85},"root",[21,30,36,48,58,64,69,75],{"type":22,"tag":23,"props":24,"children":26},"element","h2",{"id":25},"introduction",[27],{"type":28,"value":29},"text","Introduction",{"type":22,"tag":31,"props":32,"children":33},"p",{},[34],{"type":28,"value":35},"When I was a kid, it was a friend who introduced me to the joy of programming. My friend used code they had created to move characters on a very small monitor. I still remember how excited I felt seeing the characters move just like my friend had made them.\nRecently, I just finished coding a mini-game inspired by one my friend made years ago! It brought back so many memories.\nMy goal is to create a world filled with the nostalgic atmosphere of retro games through making countless games, even though I'm still learning how to express myself.",{"type":22,"tag":31,"props":37,"children":38},{},[39],{"type":22,"tag":40,"props":41,"children":45},"a",{"href":42,"rel":43},"https://myurioka.github.io/Knight/",[44],"nofollow",[46],{"type":28,"value":47},"Play in browser",{"type":22,"tag":31,"props":49,"children":50},{},[51],{"type":22,"tag":40,"props":52,"children":55},{"href":53,"rel":54},"https://github.com/myurioka/Knight",[44],[56],{"type":28,"value":57},"Source",{"type":22,"tag":23,"props":59,"children":61},{"id":60},"what-i-learned",[62],{"type":28,"value":63},"What I learned",{"type":22,"tag":31,"props":65,"children":66},{},[67],{"type":28,"value":68},"I was thrilled to discover how cleanly I could separate the game's scenario logic from its character logic, making the code much more maintainable and easier to understand.",{"type":22,"tag":23,"props":70,"children":72},{"id":71},"reference",[73],{"type":28,"value":74},"Reference",{"type":22,"tag":31,"props":76,"children":77},{},[78],{"type":22,"tag":40,"props":79,"children":82},{"href":80,"rel":81},"https://github.com/PacktPublishing/Game-Development-with-Rust-and-WebAssembly",[44],[83],{"type":28,"value":84},"Game-Development-with-Rust-and-WebAssembly",{"title":7,"searchDepth":86,"depth":86,"links":87},2,[88,89,90],{"id":25,"depth":86,"text":29},{"id":60,"depth":86,"text":63},{"id":71,"depth":86,"text":74},"markdown","content:blogs:2. Knight.md","content","blogs/2. Knight.md","blogs/2. Knight","md",{"loc":4},1740912538496]